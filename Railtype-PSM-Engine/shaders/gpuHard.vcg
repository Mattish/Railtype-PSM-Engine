float4x4 getRotXMatrix(float angle){
	float4x4 result = {{1.0f,0.0f,0.0f,0.0f},
			   	   	{0.0f,cos(angle),-(sin(angle)),0.0f},
					{0.0f,sin(angle),cos(angle),0.0f},
					{0.0f,0.0f,0.0f,1.0f}};
	return result;
}

float4x4 getRotYMatrix(float angle){
	float4x4 result = {{cos(angle),0.0f,(sin(angle)),0.0f},
			   	   	{0.0f,1.0f,0.0f,0.0f},
					{-sin(angle),0.0f,cos(angle),0.0f},
					{0.0f,0.0f,0.0f,1.0f}};
	return result;
}

float4x4 getRotZMatrix(float angle){
	float4x4 result = {{cos(angle),-(sin(angle)),0.0f,0.0f},
			   	   	{sin(angle),cos(angle),0.0f,0.0f},
					{0.0f,0.0f,1.0f,0.0f},
					{0.0f,0.0f,0.0f,1.0f}};
	return result;
}

void main( float4 in a_Position  : POSITION,
		   float4 out v_Position : POSITION,
		   float in matrixNumber : BLENDWEIGHT,
		   float2 in uv : TEXCOORD0,
		   float2 out _uv : TEXCOORD2,
		   uniform float4x4 WorldViewProj,
		   uniform float4x4 modelToWorld[10]
		   )
{
	_uv = uv;
	int arrayNumber = int(matrixNumber);
	float4x4 tmpMatrix;
	float4x4 tmpModelToWorld;
	if (modelToWorld[arrayNumber][3][3] < 0.1f){
		tmpModelToWorld = getRotXMatrix(modelToWorld[(arrayNumber)][2][0]);
	
		tmpMatrix = getRotYMatrix(modelToWorld[(arrayNumber)][2][1]);
		tmpModelToWorld = mul(tmpModelToWorld,tmpMatrix);
	
		tmpMatrix = getRotZMatrix(modelToWorld[(arrayNumber)][2][2]);
		tmpModelToWorld = mul(tmpModelToWorld,tmpMatrix);
	
		tmpMatrix[0] = float4(modelToWorld[(arrayNumber)][0][0],0,0,0);
		tmpMatrix[1] = float4(0,modelToWorld[(arrayNumber)][0][0],0,0);
		tmpMatrix[2] = float4(0,0,modelToWorld[(arrayNumber)][0][0],0);
		tmpMatrix[3] = float4(0,0,0,1);
		tmpModelToWorld= mul(tmpModelToWorld,tmpMatrix);
	
		tmpMatrix[0] = float4(1,0,0,0);
		tmpMatrix[1] = float4(0,1,0,0);
		tmpMatrix[2] = float4(0,0,1,0);
		tmpMatrix[3] = float4(modelToWorld[(arrayNumber)][1]);
	}
 	tmpModelToWorld = mul(tmpModelToWorld ,tmpMatrix);
 	tmpModelToWorld = transpose(tmpModelToWorld);
 	
	float4x4 tmp = mul( WorldViewProj, tmpModelToWorld);
	v_Position = mul( tmp, a_Position );
}